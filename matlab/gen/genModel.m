function genModel(model_path, target_path)
maxima_path= getenv('maxima_path');
if isempty(maxima_path)
    error('Please set path to maxima program via "setenv(''maxima_path'', ''PATH_TO_MAXIMA.EXE'');');
end

cagem_path= getenv('cagem_path');
if isempty(cagem_path)
    error('Please set path to cagem.mac script via "setenv(''cagem_path'', ''PATH_TO_CAMGEM.MAC'');');
end

cagem_base= fileparts(cagem_path);
cagem_base= fileparts(cagem_base);

[~, model_name]= fileparts(model_path);
if ~exist('target_path', 'var')
    target_path= fullfile(pwd, model_name);
end

if ~exist(target_path, 'dir')
    mkdir(target_path);
end

skip_gen= false;
code_file= fullfile(target_path, [model_name 'System2.hpp']);
if exist(code_file, 'file')
    dd_src= dir(model_path);
    dd_dst= dir(code_file);
    if dd_src.datenum<dd_dst.datenum
        skip_gen= true;
    end
end

if ~skip_gen
%      if ispc
%          command_str= [maxima ' -q --batch-string="problem_file:\"', strrep(problem_file, '\', '\\'), '\";target_dir:\"', strrep(target_dir, '\', '\\'), '\";batchload(\"make_iLQG.mac\");" 2>' maxima_errlog_file];
%      else
%          command_str= [maxima ' -q --batch-string="problem_file:\"', problem_file, '\"; target_dir:\"', target_dir, '\"; batchload(\"make_iLQG.mac\");" 2>' maxima_errlog_file];
%      end
    command_str= [
        maxima_path, ...
        ' ', ...
        '--batch-string="', ...
        'load(\"' cagem_path '\")\$ ', ...
        'sys:cagem(\"' model_path '\")\$ ', ...
        'cagem2c2(sys, \"' target_path '\")\$', ...
        '"'];
        
    fprintf('%s\n', command_str);
        
    [status, res]= system(command_str);
    fprintf('Maxima said:\n%s\n', res);
end

generated= false;
if exist(code_file, 'file')
    dd_src= dir(model_path);
    dd_dst= dir(code_file);
    if dd_src.datenum<dd_dst.datenum
        generated= true;
    end
end
if ~generated
    error('Code was not properly generated by Maxima');
end